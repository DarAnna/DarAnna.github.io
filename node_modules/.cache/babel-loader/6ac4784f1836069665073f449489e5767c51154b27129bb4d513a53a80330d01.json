{"ast":null,"code":"var _jsxFileName = \"/Users/annadar/birthday_card_mobile/src/pages/PhotoPuzzle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { NeuHeading, NeuText, NeuPrimaryButton, ContentContainer, NeuAnimatedContainer, NeuImageContainer, NeuButton } from '../components/NeumorphicElements';\nimport { useAppContext } from '../context/AppContext';\nimport { getPuzzlePieces } from '../utils/photos';\nimport theme from '../styles/GlobalStyles';\n\n// Styled components for the puzzle\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PuzzleContainer = styled(NeuAnimatedContainer)`\n  text-align: center;\n  width: 100%;\n  max-width: 500px;\n  margin: 0 auto;\n  padding-bottom: ${theme.spacing.xl};\n`;\n_c = PuzzleContainer;\nconst PuzzleGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.sm};\n  margin: ${theme.spacing.xl} 0;\n  width: 100%;\n  aspect-ratio: 1 / 1;\n`;\n_c2 = PuzzleGrid;\nconst PuzzlePiece = styled(motion.div)`\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding-bottom: 100%; /* Creates a perfect square */\n  overflow: hidden;\n  border-radius: ${theme.borderRadius.small};\n  cursor: pointer;\n  background-color: ${theme.colors.background};\n  box-shadow: ${props => props.$isSelected ? `0 0 0 2px ${theme.colors.accent}` : `3px 3px 5px ${theme.colors.shadow1}, -3px -3px 5px ${theme.colors.shadow2}`};\n`;\n_c3 = PuzzlePiece;\nconst PuzzlePieceImage = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-size: 300% 300%;\n  background-repeat: no-repeat;\n  \n  ${({\n  position\n}) => {\n  const row = Math.floor(position / 3);\n  const col = position % 3;\n  return `\n      background-position: ${col === 0 ? '0%' : col === 1 ? '50%' : '100%'} ${row === 0 ? '0%' : row === 1 ? '50%' : '100%'};\n    `;\n}}\n`;\n_c4 = PuzzlePieceImage;\nconst CompletedPuzzleImage = styled(NeuImageContainer)`\n  width: 100%;\n  max-width: 300px;\n  margin: ${theme.spacing.lg} auto;\n  \n  img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n`;\n_c5 = CompletedPuzzleImage;\nconst ButtonContainer = styled.div`\n  margin-top: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n  display: flex;\n  justify-content: center;\n`;\n\n// Dev skip button\n_c6 = ButtonContainer;\nconst DevSkipButton = styled(NeuButton)`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  padding: 8px 12px;\n  font-size: 0.8rem;\n  opacity: 0.6;\n  z-index: 100;\n  \n  &:hover {\n    opacity: 1;\n  }\n`;\n\n// Interfaces\n_c7 = DevSkipButton;\nconst PhotoPuzzle = () => {\n  _s();\n  const {\n    completePuzzle1\n  } = useAppContext();\n  const navigate = useNavigate();\n  const [puzzlePieces, setPuzzlePieces] = useState([]);\n  const [selectedPieceId, setSelectedPieceId] = useState(null);\n  const [isPuzzleComplete, setIsPuzzleComplete] = useState(false);\n  const [photo, setPhoto] = useState(null);\n\n  // Initialize puzzle\n  useEffect(() => {\n    const puzzlePhoto = getPuzzlePieces(1)[0]; // Get the puzzle photo\n    setPhoto(puzzlePhoto);\n\n    // Create puzzle pieces\n    const totalPieces = 9;\n    const pieces = [];\n    for (let i = 0; i < totalPieces; i++) {\n      pieces.push({\n        id: i,\n        correctPosition: i,\n        currentPosition: i,\n        imageUrl: puzzlePhoto.src\n      });\n    }\n\n    // Create a shuffled array with all positions\n    const shuffledPositions = Array.from({\n      length: totalPieces\n    }, (_, i) => i).sort(() => Math.random() - 0.5);\n\n    // Assign each piece a random position (but ensure all positions are used)\n    const shuffledPieces = pieces.map((piece, index) => ({\n      ...piece,\n      currentPosition: shuffledPositions[index]\n    }));\n\n    // Sort by current position for display\n    shuffledPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n    setPuzzlePieces(shuffledPieces);\n  }, []);\n\n  // Check if puzzle is complete\n  useEffect(() => {\n    if (puzzlePieces.length === 0) return;\n    const isComplete = puzzlePieces.every(piece => piece.correctPosition === piece.currentPosition);\n    setIsPuzzleComplete(isComplete);\n  }, [puzzlePieces]);\n\n  // Handle piece selection\n  const handlePieceClick = id => {\n    if (isPuzzleComplete) return;\n    if (selectedPieceId === null) {\n      // First piece selected\n      setSelectedPieceId(id);\n    } else {\n      // Second piece selected, swap them\n      const firstPieceIndex = puzzlePieces.findIndex(piece => piece.id === selectedPieceId);\n      const secondPieceIndex = puzzlePieces.findIndex(piece => piece.id === id);\n      const updatedPieces = [...puzzlePieces];\n\n      // Swap current positions\n      const temp = updatedPieces[firstPieceIndex].currentPosition;\n      updatedPieces[firstPieceIndex].currentPosition = updatedPieces[secondPieceIndex].currentPosition;\n      updatedPieces[secondPieceIndex].currentPosition = temp;\n\n      // Sort by current position to reorder the pieces visually\n      updatedPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n      setPuzzlePieces(updatedPieces);\n      setSelectedPieceId(null);\n    }\n  };\n\n  // Handle continue\n  const handleContinue = () => {\n    completePuzzle1();\n    navigate('/journey');\n  };\n\n  // Skip puzzle for development\n  const handleSkip = () => {\n    completePuzzle1();\n    navigate('/journey');\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: {\n      opacity: 0,\n      y: 50\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.6,\n        when: \"beforeChildren\",\n        staggerChildren: 0.1\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -50,\n      transition: {\n        duration: 0.4\n      }\n    }\n  };\n  const itemVariants = {\n    hidden: {\n      opacity: 0,\n      y: 20\n    },\n    visible: {\n      opacity: 1,\n      y: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ContentContainer, {\n    children: /*#__PURE__*/_jsxDEV(PuzzleContainer, {\n      variants: containerVariants,\n      initial: \"hidden\",\n      animate: \"visible\",\n      exit: \"exit\",\n      children: [/*#__PURE__*/_jsxDEV(DevSkipButton, {\n        onClick: handleSkip,\n        children: \"Skip (Dev Only)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        children: /*#__PURE__*/_jsxDEV(NeuHeading, {\n          children: \"\\u0424\\u043E\\u0442\\u043E\\u043F\\u0430\\u0437\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        children: /*#__PURE__*/_jsxDEV(NeuText, {\n          children: isPuzzleComplete ? \"Great job! You've completed the puzzle!\" : \"Все не так просто! Тепер склади частинки пазла аби отримати ціле фото! e the pieces to complete the famArrangily photo. Select two pieces to swap them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), isPuzzleComplete ? /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        initial: {\n          opacity: 0,\n          scale: 0.8\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CompletedPuzzleImage, {\n          children: photo && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.src,\n            alt: \"Completed Puzzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(NeuPrimaryButton, {\n            onClick: handleContinue,\n            children: \"Continue to Next Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        children: /*#__PURE__*/_jsxDEV(PuzzleGrid, {\n          children: puzzlePieces.map(piece => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            $isSelected: selectedPieceId === piece.id,\n            onClick: () => handlePieceClick(piece.id),\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: selectedPieceId === piece.id ? 1.05 : 1\n            },\n            transition: {\n              duration: 0.2\n            },\n            children: /*#__PURE__*/_jsxDEV(PuzzlePieceImage, {\n              position: piece.correctPosition,\n              style: {\n                backgroundImage: `url(${piece.imageUrl})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)\n          }, piece.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), selectedPieceId !== null && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(NeuText, {\n          children: \"Now select another piece to swap with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoPuzzle, \"dmLotrl/p38pUH+v7AnUzm310kk=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c8 = PhotoPuzzle;\nexport default PhotoPuzzle;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"PuzzleContainer\");\n$RefreshReg$(_c2, \"PuzzleGrid\");\n$RefreshReg$(_c3, \"PuzzlePiece\");\n$RefreshReg$(_c4, \"PuzzlePieceImage\");\n$RefreshReg$(_c5, \"CompletedPuzzleImage\");\n$RefreshReg$(_c6, \"ButtonContainer\");\n$RefreshReg$(_c7, \"DevSkipButton\");\n$RefreshReg$(_c8, \"PhotoPuzzle\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","motion","NeuHeading","NeuText","NeuPrimaryButton","ContentContainer","NeuAnimatedContainer","NeuImageContainer","NeuButton","useAppContext","getPuzzlePieces","theme","jsxDEV","_jsxDEV","PuzzleContainer","spacing","xl","_c","PuzzleGrid","div","sm","_c2","PuzzlePiece","borderRadius","small","colors","background","props","$isSelected","accent","shadow1","shadow2","_c3","PuzzlePieceImage","position","row","Math","floor","col","_c4","CompletedPuzzleImage","lg","_c5","ButtonContainer","_c6","DevSkipButton","_c7","PhotoPuzzle","_s","completePuzzle1","navigate","puzzlePieces","setPuzzlePieces","selectedPieceId","setSelectedPieceId","isPuzzleComplete","setIsPuzzleComplete","photo","setPhoto","puzzlePhoto","totalPieces","pieces","i","push","id","correctPosition","currentPosition","imageUrl","src","shuffledPositions","Array","from","length","_","sort","random","shuffledPieces","map","piece","index","a","b","isComplete","every","handlePieceClick","firstPieceIndex","findIndex","secondPieceIndex","updatedPieces","temp","handleContinue","handleSkip","containerVariants","hidden","opacity","y","visible","transition","duration","when","staggerChildren","exit","itemVariants","children","variants","initial","animate","onClick","fileName","_jsxFileName","lineNumber","columnNumber","scale","alt","whileHover","whileTap","style","backgroundImage","_c8","$RefreshReg$"],"sources":["/Users/annadar/birthday_card_mobile/src/pages/PhotoPuzzle.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { \n  NeuCard, \n  NeuHeading, \n  NeuText, \n  NeuPrimaryButton,\n  ContentContainer,\n  NeuAnimatedContainer,\n  NeuImageContainer,\n  NeuButton\n} from '../components/NeumorphicElements';\nimport { useAppContext } from '../context/AppContext';\nimport { getPuzzlePieces, Photo } from '../utils/photos';\nimport theme from '../styles/GlobalStyles';\n\n// Styled components for the puzzle\nconst PuzzleContainer = styled(NeuAnimatedContainer)`\n  text-align: center;\n  width: 100%;\n  max-width: 500px;\n  margin: 0 auto;\n  padding-bottom: ${theme.spacing.xl};\n`;\n\nconst PuzzleGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.sm};\n  margin: ${theme.spacing.xl} 0;\n  width: 100%;\n  aspect-ratio: 1 / 1;\n`;\n\nconst PuzzlePiece = styled(motion.div)<{ $isSelected?: boolean }>`\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding-bottom: 100%; /* Creates a perfect square */\n  overflow: hidden;\n  border-radius: ${theme.borderRadius.small};\n  cursor: pointer;\n  background-color: ${theme.colors.background};\n  box-shadow: ${props => props.$isSelected \n    ? `0 0 0 2px ${theme.colors.accent}` \n    : `3px 3px 5px ${theme.colors.shadow1}, -3px -3px 5px ${theme.colors.shadow2}`};\n`;\n\nconst PuzzlePieceImage = styled.div<{ position: number }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-size: 300% 300%;\n  background-repeat: no-repeat;\n  \n  ${({ position }) => {\n    const row = Math.floor(position / 3);\n    const col = position % 3;\n    return `\n      background-position: ${col === 0 ? '0%' : col === 1 ? '50%' : '100%'} ${row === 0 ? '0%' : row === 1 ? '50%' : '100%'};\n    `;\n  }}\n`;\n\nconst CompletedPuzzleImage = styled(NeuImageContainer)`\n  width: 100%;\n  max-width: 300px;\n  margin: ${theme.spacing.lg} auto;\n  \n  img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n  display: flex;\n  justify-content: center;\n`;\n\n// Dev skip button\nconst DevSkipButton = styled(NeuButton)`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  padding: 8px 12px;\n  font-size: 0.8rem;\n  opacity: 0.6;\n  z-index: 100;\n  \n  &:hover {\n    opacity: 1;\n  }\n`;\n\n// Interfaces\ninterface PuzzlePieceType {\n  id: number;\n  correctPosition: number;\n  currentPosition: number;\n  imageUrl: string;\n}\n\nconst PhotoPuzzle: React.FC = () => {\n  const { completePuzzle1 } = useAppContext();\n  const navigate = useNavigate();\n  const [puzzlePieces, setPuzzlePieces] = useState<PuzzlePieceType[]>([]);\n  const [selectedPieceId, setSelectedPieceId] = useState<number | null>(null);\n  const [isPuzzleComplete, setIsPuzzleComplete] = useState(false);\n  const [photo, setPhoto] = useState<Photo | null>(null);\n  \n  // Initialize puzzle\n  useEffect(() => {\n    const puzzlePhoto = getPuzzlePieces(1)[0]; // Get the puzzle photo\n    setPhoto(puzzlePhoto);\n    \n    // Create puzzle pieces\n    const totalPieces = 9;\n    const pieces: PuzzlePieceType[] = [];\n    \n    for (let i = 0; i < totalPieces; i++) {\n      pieces.push({\n        id: i,\n        correctPosition: i,\n        currentPosition: i,\n        imageUrl: puzzlePhoto.src,\n      });\n    }\n    \n    // Create a shuffled array with all positions\n    const shuffledPositions = Array.from({ length: totalPieces }, (_, i) => i)\n      .sort(() => Math.random() - 0.5);\n      \n    // Assign each piece a random position (but ensure all positions are used)\n    const shuffledPieces = pieces.map((piece, index) => ({\n      ...piece,\n      currentPosition: shuffledPositions[index]\n    }));\n    \n    // Sort by current position for display\n    shuffledPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n    \n    setPuzzlePieces(shuffledPieces);\n  }, []);\n  \n  // Check if puzzle is complete\n  useEffect(() => {\n    if (puzzlePieces.length === 0) return;\n    \n    const isComplete = puzzlePieces.every(piece => piece.correctPosition === piece.currentPosition);\n    setIsPuzzleComplete(isComplete);\n  }, [puzzlePieces]);\n  \n  // Handle piece selection\n  const handlePieceClick = (id: number) => {\n    if (isPuzzleComplete) return;\n    \n    if (selectedPieceId === null) {\n      // First piece selected\n      setSelectedPieceId(id);\n    } else {\n      // Second piece selected, swap them\n      const firstPieceIndex = puzzlePieces.findIndex(piece => piece.id === selectedPieceId);\n      const secondPieceIndex = puzzlePieces.findIndex(piece => piece.id === id);\n      \n      const updatedPieces = [...puzzlePieces];\n      \n      // Swap current positions\n      const temp = updatedPieces[firstPieceIndex].currentPosition;\n      updatedPieces[firstPieceIndex].currentPosition = updatedPieces[secondPieceIndex].currentPosition;\n      updatedPieces[secondPieceIndex].currentPosition = temp;\n      \n      // Sort by current position to reorder the pieces visually\n      updatedPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n      \n      setPuzzlePieces(updatedPieces);\n      setSelectedPieceId(null);\n    }\n  };\n  \n  // Handle continue\n  const handleContinue = () => {\n    completePuzzle1();\n    navigate('/journey');\n  };\n  \n  // Skip puzzle for development\n  const handleSkip = () => {\n    completePuzzle1();\n    navigate('/journey');\n  };\n  \n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0, y: 50 },\n    visible: { \n      opacity: 1, \n      y: 0,\n      transition: { \n        duration: 0.6,\n        when: \"beforeChildren\",\n        staggerChildren: 0.1\n      }\n    },\n    exit: { \n      opacity: 0,\n      y: -50,\n      transition: { duration: 0.4 }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 }\n  };\n  \n  return (\n    <ContentContainer>\n      <PuzzleContainer\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"exit\"\n      >\n        {/* Development skip button */}\n        <DevSkipButton onClick={handleSkip}>\n          Skip (Dev Only)\n        </DevSkipButton>\n        \n        <motion.div variants={itemVariants}>\n          <NeuHeading>Фотопазл</NeuHeading>\n        </motion.div>\n        \n        <motion.div variants={itemVariants}>\n          <NeuText>\n            {isPuzzleComplete \n              ? \"Great job! You've completed the puzzle!\" \n              : \"Все не так просто! Тепер склади частинки пазла аби отримати ціле фото! e the pieces to complete the famArrangily photo. Select two pieces to swap them.\"}\n          </NeuText>\n        </motion.div>\n        \n        {isPuzzleComplete ? (\n          <motion.div \n            variants={itemVariants}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.5 }}\n          >\n            <CompletedPuzzleImage>\n              {photo && <img src={photo.src} alt=\"Completed Puzzle\" />}\n            </CompletedPuzzleImage>\n            \n            <ButtonContainer>\n              <NeuPrimaryButton onClick={handleContinue}>\n                Continue to Next Challenge\n              </NeuPrimaryButton>\n            </ButtonContainer>\n          </motion.div>\n        ) : (\n          <motion.div variants={itemVariants}>\n            <PuzzleGrid>\n              {puzzlePieces.map((piece) => (\n                <PuzzlePiece\n                  key={piece.id}\n                  $isSelected={selectedPieceId === piece.id}\n                  onClick={() => handlePieceClick(piece.id)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ \n                    opacity: 1, \n                    scale: selectedPieceId === piece.id ? 1.05 : 1,\n                  }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <PuzzlePieceImage \n                    position={piece.correctPosition}\n                    style={{\n                      backgroundImage: `url(${piece.imageUrl})`\n                    }}\n                  />\n                </PuzzlePiece>\n              ))}\n            </PuzzleGrid>\n          </motion.div>\n        )}\n        \n        {selectedPieceId !== null && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n          >\n            <NeuText>Now select another piece to swap with</NeuText>\n          </motion.div>\n        )}\n      </PuzzleContainer>\n    </ContentContainer>\n  );\n};\n\nexport default PhotoPuzzle; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}