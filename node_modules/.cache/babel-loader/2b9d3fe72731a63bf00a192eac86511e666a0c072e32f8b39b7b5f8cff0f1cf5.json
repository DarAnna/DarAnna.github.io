{"ast":null,"code":"var _jsxFileName = \"/Users/annadar/birthday_card_mobile/src/pages/PhotoPuzzle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { NeuHeading, NeuText, NeuPrimaryButton, ContentContainer, NeuAnimatedContainer, NeuImageContainer } from '../components/NeumorphicElements';\nimport { useAppContext } from '../context/AppContext';\nimport { getPuzzlePieces } from '../utils/photos';\nimport theme from '../styles/GlobalStyles';\n\n// Styled components for the puzzle\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PuzzleContainer = styled(NeuAnimatedContainer)`\n  text-align: center;\n  width: 100%;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n_c = PuzzleContainer;\nconst PuzzleGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.sm};\n  margin: ${theme.spacing.xl} 0;\n  width: 100%;\n  aspect-ratio: 1 / 1;\n`;\n\n// Fix the isDragging prop by using a data attribute instead\n_c2 = PuzzleGrid;\nconst PuzzlePiece = styled(motion.div)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  border-radius: ${theme.borderRadius.small};\n  cursor: pointer;\n  background-color: ${theme.colors.background};\n  box-shadow: ${props => props.$isSelected ? `0 0 0 2px ${theme.colors.accent}` : `3px 3px 5px ${theme.colors.shadow1}, -3px -3px 5px ${theme.colors.shadow2}`};\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    pointer-events: none;\n  }\n`;\n_c3 = PuzzlePiece;\nconst CompletedPuzzleImage = styled(NeuImageContainer)`\n  width: 100%;\n  max-width: 300px;\n  margin: ${theme.spacing.lg} auto;\n  aspect-ratio: 1 / 1;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n_c4 = CompletedPuzzleImage;\nconst ButtonContainer = styled.div`\n  margin-top: ${theme.spacing.lg};\n  display: flex;\n  justify-content: center;\n`;\n\n// Interfaces\n_c5 = ButtonContainer;\nconst PhotoPuzzle = () => {\n  _s();\n  const {\n    completePuzzle1\n  } = useAppContext();\n  const navigate = useNavigate();\n  const [puzzlePieces, setPuzzlePieces] = useState([]);\n  const [selectedPieceId, setSelectedPieceId] = useState(null);\n  const [isPuzzleComplete, setIsPuzzleComplete] = useState(false);\n  const [photo, setPhoto] = useState(null);\n\n  // Initialize puzzle\n  useEffect(() => {\n    const puzzlePhoto = getPuzzlePieces(1)[0]; // Get the puzzle photo\n    setPhoto(puzzlePhoto);\n\n    // Create puzzle pieces\n    const totalPieces = 9;\n    const pieces = [];\n    for (let i = 0; i < totalPieces; i++) {\n      pieces.push({\n        id: i,\n        correctPosition: i,\n        currentPosition: i,\n        imageUrl: puzzlePhoto.src\n      });\n    }\n\n    // Shuffle pieces\n    const shuffledPieces = [...pieces];\n    // Create a more controlled shuffle to avoid duplicates\n    const positions = Array.from({\n      length: totalPieces\n    }, (_, i) => i);\n    shuffledPieces.forEach(piece => {\n      const randomIndex = Math.floor(Math.random() * positions.length);\n      const randomPosition = positions.splice(randomIndex, 1)[0];\n      piece.currentPosition = randomPosition;\n    });\n\n    // Sort by current position to display correctly\n    shuffledPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n    setPuzzlePieces(shuffledPieces);\n  }, []);\n\n  // Check if puzzle is complete\n  useEffect(() => {\n    if (puzzlePieces.length === 0) return;\n    const isComplete = puzzlePieces.every(piece => piece.correctPosition === piece.currentPosition);\n    setIsPuzzleComplete(isComplete);\n  }, [puzzlePieces]);\n\n  // Handle piece selection\n  const handlePieceClick = id => {\n    if (isPuzzleComplete) return;\n    if (selectedPieceId === null) {\n      // First piece selected\n      setSelectedPieceId(id);\n    } else {\n      // Second piece selected, swap them\n      const firstPieceIndex = puzzlePieces.findIndex(piece => piece.id === selectedPieceId);\n      const secondPieceIndex = puzzlePieces.findIndex(piece => piece.id === id);\n      const updatedPieces = [...puzzlePieces];\n\n      // Swap current positions\n      const temp = updatedPieces[firstPieceIndex].currentPosition;\n      updatedPieces[firstPieceIndex].currentPosition = updatedPieces[secondPieceIndex].currentPosition;\n      updatedPieces[secondPieceIndex].currentPosition = temp;\n\n      // Sort by current position to reorder the pieces visually\n      updatedPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n      setPuzzlePieces(updatedPieces);\n      setSelectedPieceId(null);\n    }\n  };\n\n  // Handle continue\n  const handleContinue = () => {\n    completePuzzle1();\n    navigate('/journey');\n  };\n\n  // Get the background position for a puzzle piece\n  const getPieceBackgroundPosition = correctPos => {\n    const row = Math.floor(correctPos / 3);\n    const col = correctPos % 3;\n    return `${-col * 100}% ${-row * 100}%`;\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: {\n      opacity: 0,\n      y: 50\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.6,\n        when: \"beforeChildren\",\n        staggerChildren: 0.1\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -50,\n      transition: {\n        duration: 0.4\n      }\n    }\n  };\n  const itemVariants = {\n    hidden: {\n      opacity: 0,\n      y: 20\n    },\n    visible: {\n      opacity: 1,\n      y: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ContentContainer, {\n    children: /*#__PURE__*/_jsxDEV(PuzzleContainer, {\n      variants: containerVariants,\n      initial: \"hidden\",\n      animate: \"visible\",\n      exit: \"exit\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        children: /*#__PURE__*/_jsxDEV(NeuHeading, {\n          children: \"Photo Puzzle Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        children: /*#__PURE__*/_jsxDEV(NeuText, {\n          children: isPuzzleComplete ? \"Great job! You've completed the puzzle!\" : \"Arrange the pieces to complete the family photo. Select two pieces to swap them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), isPuzzleComplete ? /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        initial: {\n          opacity: 0,\n          scale: 0.8\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CompletedPuzzleImage, {\n          children: photo && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.src,\n            alt: \"Completed Puzzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(NeuPrimaryButton, {\n            onClick: handleContinue,\n            children: \"Continue to Next Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: itemVariants,\n        children: /*#__PURE__*/_jsxDEV(PuzzleGrid, {\n          children: puzzlePieces.map(piece => /*#__PURE__*/_jsxDEV(PuzzlePiece, {\n            $isSelected: selectedPieceId === piece.id,\n            onClick: () => handlePieceClick(piece.id),\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: selectedPieceId === piece.id ? 1.05 : 1\n            },\n            transition: {\n              duration: 0.2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '300%',\n                height: '300%',\n                transformOrigin: 'top left',\n                transform: 'scale(0.33333)',\n                backgroundImage: `url(${piece.imageUrl})`,\n                backgroundPosition: getPieceBackgroundPosition(piece.correctPosition),\n                backgroundSize: '300%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)\n          }, piece.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), selectedPieceId !== null && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(NeuText, {\n          children: \"Now select another piece to swap with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoPuzzle, \"dmLotrl/p38pUH+v7AnUzm310kk=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c6 = PhotoPuzzle;\nexport default PhotoPuzzle;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PuzzleContainer\");\n$RefreshReg$(_c2, \"PuzzleGrid\");\n$RefreshReg$(_c3, \"PuzzlePiece\");\n$RefreshReg$(_c4, \"CompletedPuzzleImage\");\n$RefreshReg$(_c5, \"ButtonContainer\");\n$RefreshReg$(_c6, \"PhotoPuzzle\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","motion","NeuHeading","NeuText","NeuPrimaryButton","ContentContainer","NeuAnimatedContainer","NeuImageContainer","useAppContext","getPuzzlePieces","theme","jsxDEV","_jsxDEV","PuzzleContainer","_c","PuzzleGrid","div","spacing","sm","xl","_c2","PuzzlePiece","borderRadius","small","colors","background","props","$isSelected","accent","shadow1","shadow2","_c3","CompletedPuzzleImage","lg","_c4","ButtonContainer","_c5","PhotoPuzzle","_s","completePuzzle1","navigate","puzzlePieces","setPuzzlePieces","selectedPieceId","setSelectedPieceId","isPuzzleComplete","setIsPuzzleComplete","photo","setPhoto","puzzlePhoto","totalPieces","pieces","i","push","id","correctPosition","currentPosition","imageUrl","src","shuffledPieces","positions","Array","from","length","_","forEach","piece","randomIndex","Math","floor","random","randomPosition","splice","sort","a","b","isComplete","every","handlePieceClick","firstPieceIndex","findIndex","secondPieceIndex","updatedPieces","temp","handleContinue","getPieceBackgroundPosition","correctPos","row","col","containerVariants","hidden","opacity","y","visible","transition","duration","when","staggerChildren","exit","itemVariants","children","variants","initial","animate","fileName","_jsxFileName","lineNumber","columnNumber","scale","alt","onClick","map","whileHover","whileTap","style","width","height","transformOrigin","transform","backgroundImage","backgroundPosition","backgroundSize","_c6","$RefreshReg$"],"sources":["/Users/annadar/birthday_card_mobile/src/pages/PhotoPuzzle.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { \n  NeuCard, \n  NeuHeading, \n  NeuText, \n  NeuPrimaryButton,\n  ContentContainer,\n  NeuAnimatedContainer,\n  NeuImageContainer,\n  NeuButton\n} from '../components/NeumorphicElements';\nimport { useAppContext } from '../context/AppContext';\nimport { getPuzzlePieces, Photo } from '../utils/photos';\nimport theme from '../styles/GlobalStyles';\n\n// Styled components for the puzzle\nconst PuzzleContainer = styled(NeuAnimatedContainer)`\n  text-align: center;\n  width: 100%;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nconst PuzzleGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.sm};\n  margin: ${theme.spacing.xl} 0;\n  width: 100%;\n  aspect-ratio: 1 / 1;\n`;\n\n// Fix the isDragging prop by using a data attribute instead\nconst PuzzlePiece = styled(motion.div)<{ $isSelected?: boolean }>`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  border-radius: ${theme.borderRadius.small};\n  cursor: pointer;\n  background-color: ${theme.colors.background};\n  box-shadow: ${props => props.$isSelected \n    ? `0 0 0 2px ${theme.colors.accent}` \n    : `3px 3px 5px ${theme.colors.shadow1}, -3px -3px 5px ${theme.colors.shadow2}`};\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    pointer-events: none;\n  }\n`;\n\nconst CompletedPuzzleImage = styled(NeuImageContainer)`\n  width: 100%;\n  max-width: 300px;\n  margin: ${theme.spacing.lg} auto;\n  aspect-ratio: 1 / 1;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: ${theme.spacing.lg};\n  display: flex;\n  justify-content: center;\n`;\n\n// Interfaces\ninterface PuzzlePieceType {\n  id: number;\n  correctPosition: number;\n  currentPosition: number;\n  imageUrl: string;\n}\n\nconst PhotoPuzzle: React.FC = () => {\n  const { completePuzzle1 } = useAppContext();\n  const navigate = useNavigate();\n  const [puzzlePieces, setPuzzlePieces] = useState<PuzzlePieceType[]>([]);\n  const [selectedPieceId, setSelectedPieceId] = useState<number | null>(null);\n  const [isPuzzleComplete, setIsPuzzleComplete] = useState(false);\n  const [photo, setPhoto] = useState<Photo | null>(null);\n  \n  // Initialize puzzle\n  useEffect(() => {\n    const puzzlePhoto = getPuzzlePieces(1)[0]; // Get the puzzle photo\n    setPhoto(puzzlePhoto);\n    \n    // Create puzzle pieces\n    const totalPieces = 9;\n    const pieces: PuzzlePieceType[] = [];\n    \n    for (let i = 0; i < totalPieces; i++) {\n      pieces.push({\n        id: i,\n        correctPosition: i,\n        currentPosition: i,\n        imageUrl: puzzlePhoto.src,\n      });\n    }\n    \n    // Shuffle pieces\n    const shuffledPieces = [...pieces];\n    // Create a more controlled shuffle to avoid duplicates\n    const positions = Array.from({length: totalPieces}, (_, i) => i);\n    shuffledPieces.forEach(piece => {\n      const randomIndex = Math.floor(Math.random() * positions.length);\n      const randomPosition = positions.splice(randomIndex, 1)[0];\n      piece.currentPosition = randomPosition;\n    });\n    \n    // Sort by current position to display correctly\n    shuffledPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n    \n    setPuzzlePieces(shuffledPieces);\n  }, []);\n  \n  // Check if puzzle is complete\n  useEffect(() => {\n    if (puzzlePieces.length === 0) return;\n    \n    const isComplete = puzzlePieces.every(piece => piece.correctPosition === piece.currentPosition);\n    setIsPuzzleComplete(isComplete);\n  }, [puzzlePieces]);\n  \n  // Handle piece selection\n  const handlePieceClick = (id: number) => {\n    if (isPuzzleComplete) return;\n    \n    if (selectedPieceId === null) {\n      // First piece selected\n      setSelectedPieceId(id);\n    } else {\n      // Second piece selected, swap them\n      const firstPieceIndex = puzzlePieces.findIndex(piece => piece.id === selectedPieceId);\n      const secondPieceIndex = puzzlePieces.findIndex(piece => piece.id === id);\n      \n      const updatedPieces = [...puzzlePieces];\n      \n      // Swap current positions\n      const temp = updatedPieces[firstPieceIndex].currentPosition;\n      updatedPieces[firstPieceIndex].currentPosition = updatedPieces[secondPieceIndex].currentPosition;\n      updatedPieces[secondPieceIndex].currentPosition = temp;\n      \n      // Sort by current position to reorder the pieces visually\n      updatedPieces.sort((a, b) => a.currentPosition - b.currentPosition);\n      \n      setPuzzlePieces(updatedPieces);\n      setSelectedPieceId(null);\n    }\n  };\n  \n  // Handle continue\n  const handleContinue = () => {\n    completePuzzle1();\n    navigate('/journey');\n  };\n  \n  // Get the background position for a puzzle piece\n  const getPieceBackgroundPosition = (correctPos: number) => {\n    const row = Math.floor(correctPos / 3);\n    const col = correctPos % 3;\n    return `${-col * 100}% ${-row * 100}%`;\n  };\n  \n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0, y: 50 },\n    visible: { \n      opacity: 1, \n      y: 0,\n      transition: { \n        duration: 0.6,\n        when: \"beforeChildren\",\n        staggerChildren: 0.1\n      }\n    },\n    exit: { \n      opacity: 0,\n      y: -50,\n      transition: { duration: 0.4 }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 }\n  };\n  \n  return (\n    <ContentContainer>\n      <PuzzleContainer\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"exit\"\n      >\n        <motion.div variants={itemVariants}>\n          <NeuHeading>Photo Puzzle Challenge</NeuHeading>\n        </motion.div>\n        \n        <motion.div variants={itemVariants}>\n          <NeuText>\n            {isPuzzleComplete \n              ? \"Great job! You've completed the puzzle!\" \n              : \"Arrange the pieces to complete the family photo. Select two pieces to swap them.\"}\n          </NeuText>\n        </motion.div>\n        \n        {isPuzzleComplete ? (\n          <motion.div \n            variants={itemVariants}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.5 }}\n          >\n            <CompletedPuzzleImage>\n              {photo && <img src={photo.src} alt=\"Completed Puzzle\" />}\n            </CompletedPuzzleImage>\n            \n            <ButtonContainer>\n              <NeuPrimaryButton onClick={handleContinue}>\n                Continue to Next Challenge\n              </NeuPrimaryButton>\n            </ButtonContainer>\n          </motion.div>\n        ) : (\n          <motion.div variants={itemVariants}>\n            <PuzzleGrid>\n              {puzzlePieces.map((piece) => (\n                <PuzzlePiece\n                  key={piece.id}\n                  $isSelected={selectedPieceId === piece.id}\n                  onClick={() => handlePieceClick(piece.id)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ \n                    opacity: 1, \n                    scale: selectedPieceId === piece.id ? 1.05 : 1,\n                  }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <div\n                    style={{\n                      width: '300%',\n                      height: '300%',\n                      transformOrigin: 'top left',\n                      transform: 'scale(0.33333)',\n                      backgroundImage: `url(${piece.imageUrl})`,\n                      backgroundPosition: getPieceBackgroundPosition(piece.correctPosition),\n                      backgroundSize: '300%',\n                    }}\n                  />\n                </PuzzlePiece>\n              ))}\n            </PuzzleGrid>\n          </motion.div>\n        )}\n        \n        {selectedPieceId !== null && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n          >\n            <NeuText>Now select another piece to swap with</NeuText>\n          </motion.div>\n        )}\n      </PuzzleContainer>\n    </ContentContainer>\n  );\n};\n\nexport default PhotoPuzzle; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAEEC,UAAU,EACVC,OAAO,EACPC,gBAAgB,EAChBC,gBAAgB,EAChBC,oBAAoB,EACpBC,iBAAiB,QAEZ,kCAAkC;AACzC,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,eAAe,QAAe,iBAAiB;AACxD,OAAOC,KAAK,MAAM,wBAAwB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGb,MAAM,CAACM,oBAAoB,CAAC;AACpD;AACA;AACA;AACA;AACA,CAAC;AAACQ,EAAA,GALID,eAAe;AAOrB,MAAME,UAAU,GAAGf,MAAM,CAACgB,GAAG;AAC7B;AACA;AACA,SAASN,KAAK,CAACO,OAAO,CAACC,EAAE;AACzB,YAAYR,KAAK,CAACO,OAAO,CAACE,EAAE;AAC5B;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATML,UAAU;AAUhB,MAAMM,WAAW,GAAGrB,MAAM,CAACC,MAAM,CAACe,GAAG,CAA4B;AACjE;AACA;AACA;AACA;AACA,mBAAmBN,KAAK,CAACY,YAAY,CAACC,KAAK;AAC3C;AACA,sBAAsBb,KAAK,CAACc,MAAM,CAACC,UAAU;AAC7C,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,WAAW,GACpC,aAAajB,KAAK,CAACc,MAAM,CAACI,MAAM,EAAE,GAClC,eAAelB,KAAK,CAACc,MAAM,CAACK,OAAO,mBAAmBnB,KAAK,CAACc,MAAM,CAACM,OAAO,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAlBIV,WAAW;AAoBjB,MAAMW,oBAAoB,GAAGhC,MAAM,CAACO,iBAAiB,CAAC;AACtD;AACA;AACA,YAAYG,KAAK,CAACO,OAAO,CAACgB,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,oBAAoB;AAa1B,MAAMG,eAAe,GAAGnC,MAAM,CAACgB,GAAG;AAClC,gBAAgBN,KAAK,CAACO,OAAO,CAACgB,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AAAAG,GAAA,GANMD,eAAe;AAcrB,MAAME,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAgB,CAAC,GAAG/B,aAAa,CAAC,CAAC;EAC3C,MAAMgC,QAAQ,GAAGzC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG7C,QAAQ,CAAoB,EAAE,CAAC;EACvE,MAAM,CAAC8C,eAAe,EAAEC,kBAAkB,CAAC,GAAG/C,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAACgD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACkD,KAAK,EAAEC,QAAQ,CAAC,GAAGnD,QAAQ,CAAe,IAAI,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMmD,WAAW,GAAGxC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3CuC,QAAQ,CAACC,WAAW,CAAC;;IAErB;IACA,MAAMC,WAAW,GAAG,CAAC;IACrB,MAAMC,MAAyB,GAAG,EAAE;IAEpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,EAAEE,CAAC,EAAE,EAAE;MACpCD,MAAM,CAACE,IAAI,CAAC;QACVC,EAAE,EAAEF,CAAC;QACLG,eAAe,EAAEH,CAAC;QAClBI,eAAe,EAAEJ,CAAC;QAClBK,QAAQ,EAAER,WAAW,CAACS;MACxB,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMC,cAAc,GAAG,CAAC,GAAGR,MAAM,CAAC;IAClC;IACA,MAAMS,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAEb;IAAW,CAAC,EAAE,CAACc,CAAC,EAAEZ,CAAC,KAAKA,CAAC,CAAC;IAChEO,cAAc,CAACM,OAAO,CAACC,KAAK,IAAI;MAC9B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGV,SAAS,CAACG,MAAM,CAAC;MAChE,MAAMQ,cAAc,GAAGX,SAAS,CAACY,MAAM,CAACL,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DD,KAAK,CAACV,eAAe,GAAGe,cAAc;IACxC,CAAC,CAAC;;IAEF;IACAZ,cAAc,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAClB,eAAe,GAAGmB,CAAC,CAACnB,eAAe,CAAC;IAEpEd,eAAe,CAACiB,cAAc,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7D,SAAS,CAAC,MAAM;IACd,IAAI2C,YAAY,CAACsB,MAAM,KAAK,CAAC,EAAE;IAE/B,MAAMa,UAAU,GAAGnC,YAAY,CAACoC,KAAK,CAACX,KAAK,IAAIA,KAAK,CAACX,eAAe,KAAKW,KAAK,CAACV,eAAe,CAAC;IAC/FV,mBAAmB,CAAC8B,UAAU,CAAC;EACjC,CAAC,EAAE,CAACnC,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMqC,gBAAgB,GAAIxB,EAAU,IAAK;IACvC,IAAIT,gBAAgB,EAAE;IAEtB,IAAIF,eAAe,KAAK,IAAI,EAAE;MAC5B;MACAC,kBAAkB,CAACU,EAAE,CAAC;IACxB,CAAC,MAAM;MACL;MACA,MAAMyB,eAAe,GAAGtC,YAAY,CAACuC,SAAS,CAACd,KAAK,IAAIA,KAAK,CAACZ,EAAE,KAAKX,eAAe,CAAC;MACrF,MAAMsC,gBAAgB,GAAGxC,YAAY,CAACuC,SAAS,CAACd,KAAK,IAAIA,KAAK,CAACZ,EAAE,KAAKA,EAAE,CAAC;MAEzE,MAAM4B,aAAa,GAAG,CAAC,GAAGzC,YAAY,CAAC;;MAEvC;MACA,MAAM0C,IAAI,GAAGD,aAAa,CAACH,eAAe,CAAC,CAACvB,eAAe;MAC3D0B,aAAa,CAACH,eAAe,CAAC,CAACvB,eAAe,GAAG0B,aAAa,CAACD,gBAAgB,CAAC,CAACzB,eAAe;MAChG0B,aAAa,CAACD,gBAAgB,CAAC,CAACzB,eAAe,GAAG2B,IAAI;;MAEtD;MACAD,aAAa,CAACT,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAClB,eAAe,GAAGmB,CAAC,CAACnB,eAAe,CAAC;MAEnEd,eAAe,CAACwC,aAAa,CAAC;MAC9BtC,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAMwC,cAAc,GAAGA,CAAA,KAAM;IAC3B7C,eAAe,CAAC,CAAC;IACjBC,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;;EAED;EACA,MAAM6C,0BAA0B,GAAIC,UAAkB,IAAK;IACzD,MAAMC,GAAG,GAAGnB,IAAI,CAACC,KAAK,CAACiB,UAAU,GAAG,CAAC,CAAC;IACtC,MAAME,GAAG,GAAGF,UAAU,GAAG,CAAC;IAC1B,OAAO,GAAG,CAACE,GAAG,GAAG,GAAG,KAAK,CAACD,GAAG,GAAG,GAAG,GAAG;EACxC,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAG;IACxBC,MAAM,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAG,CAAC;IAC7BC,OAAO,EAAE;MACPF,OAAO,EAAE,CAAC;MACVC,CAAC,EAAE,CAAC;MACJE,UAAU,EAAE;QACVC,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAE,gBAAgB;QACtBC,eAAe,EAAE;MACnB;IACF,CAAC;IACDC,IAAI,EAAE;MACJP,OAAO,EAAE,CAAC;MACVC,CAAC,EAAE,CAAC,EAAE;MACNE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI;IAC9B;EACF,CAAC;EAED,MAAMI,YAAY,GAAG;IACnBT,MAAM,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAG,CAAC;IAC7BC,OAAO,EAAE;MAAEF,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE;EAC9B,CAAC;EAED,oBACEhF,OAAA,CAACP,gBAAgB;IAAA+F,QAAA,eACfxF,OAAA,CAACC,eAAe;MACdwF,QAAQ,EAAEZ,iBAAkB;MAC5Ba,OAAO,EAAC,QAAQ;MAChBC,OAAO,EAAC,SAAS;MACjBL,IAAI,EAAC,MAAM;MAAAE,QAAA,gBAEXxF,OAAA,CAACX,MAAM,CAACe,GAAG;QAACqF,QAAQ,EAAEF,YAAa;QAAAC,QAAA,eACjCxF,OAAA,CAACV,UAAU;UAAAkG,QAAA,EAAC;QAAsB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAEb/F,OAAA,CAACX,MAAM,CAACe,GAAG;QAACqF,QAAQ,EAAEF,YAAa;QAAAC,QAAA,eACjCxF,OAAA,CAACT,OAAO;UAAAiG,QAAA,EACLvD,gBAAgB,GACb,yCAAyC,GACzC;QAAkF;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAEZ9D,gBAAgB,gBACfjC,OAAA,CAACX,MAAM,CAACe,GAAG;QACTqF,QAAQ,EAAEF,YAAa;QACvBG,OAAO,EAAE;UAAEX,OAAO,EAAE,CAAC;UAAEiB,KAAK,EAAE;QAAI,CAAE;QACpCL,OAAO,EAAE;UAAEZ,OAAO,EAAE,CAAC;UAAEiB,KAAK,EAAE;QAAE,CAAE;QAClCd,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAK,QAAA,gBAE9BxF,OAAA,CAACoB,oBAAoB;UAAAoE,QAAA,EAClBrD,KAAK,iBAAInC,OAAA;YAAK8C,GAAG,EAAEX,KAAK,CAACW,GAAI;YAACmD,GAAG,EAAC;UAAkB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eAEvB/F,OAAA,CAACuB,eAAe;UAAAiE,QAAA,eACdxF,OAAA,CAACR,gBAAgB;YAAC0G,OAAO,EAAE1B,cAAe;YAAAgB,QAAA,EAAC;UAE3C;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,gBAEb/F,OAAA,CAACX,MAAM,CAACe,GAAG;QAACqF,QAAQ,EAAEF,YAAa;QAAAC,QAAA,eACjCxF,OAAA,CAACG,UAAU;UAAAqF,QAAA,EACR3D,YAAY,CAACsE,GAAG,CAAE7C,KAAK,iBACtBtD,OAAA,CAACS,WAAW;YAEVM,WAAW,EAAEgB,eAAe,KAAKuB,KAAK,CAACZ,EAAG;YAC1CwD,OAAO,EAAEA,CAAA,KAAMhC,gBAAgB,CAACZ,KAAK,CAACZ,EAAE,CAAE;YAC1C0D,UAAU,EAAE;cAAEJ,KAAK,EAAE;YAAK,CAAE;YAC5BK,QAAQ,EAAE;cAAEL,KAAK,EAAE;YAAK,CAAE;YAC1BN,OAAO,EAAE;cAAEX,OAAO,EAAE,CAAC;cAAEiB,KAAK,EAAE;YAAI,CAAE;YACpCL,OAAO,EAAE;cACPZ,OAAO,EAAE,CAAC;cACViB,KAAK,EAAEjE,eAAe,KAAKuB,KAAK,CAACZ,EAAE,GAAG,IAAI,GAAG;YAC/C,CAAE;YACFwC,UAAU,EAAE;cAAEC,QAAQ,EAAE;YAAI,CAAE;YAAAK,QAAA,eAE9BxF,OAAA;cACEsG,KAAK,EAAE;gBACLC,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdC,eAAe,EAAE,UAAU;gBAC3BC,SAAS,EAAE,gBAAgB;gBAC3BC,eAAe,EAAE,OAAOrD,KAAK,CAACT,QAAQ,GAAG;gBACzC+D,kBAAkB,EAAEnC,0BAA0B,CAACnB,KAAK,CAACX,eAAe,CAAC;gBACrEkE,cAAc,EAAE;cAClB;YAAE;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAtBGzC,KAAK,CAACZ,EAAE;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuBF,CACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACb,EAEAhE,eAAe,KAAK,IAAI,iBACvB/B,OAAA,CAACX,MAAM,CAACe,GAAG;QACTsF,OAAO,EAAE;UAAEX,OAAO,EAAE;QAAE,CAAE;QACxBY,OAAO,EAAE;UAAEZ,OAAO,EAAE;QAAE,CAAE;QACxBG,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAK,QAAA,eAE9BxF,OAAA,CAACT,OAAO;UAAAiG,QAAA,EAAC;QAAqC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEvB,CAAC;AAACrE,EAAA,CArMID,WAAqB;EAAA,QACG7B,aAAa,EACxBT,WAAW;AAAA;AAAA2H,GAAA,GAFxBrF,WAAqB;AAuM3B,eAAeA,WAAW;AAAC,IAAAvB,EAAA,EAAAM,GAAA,EAAAW,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAsF,GAAA;AAAAC,YAAA,CAAA7G,EAAA;AAAA6G,YAAA,CAAAvG,GAAA;AAAAuG,YAAA,CAAA5F,GAAA;AAAA4F,YAAA,CAAAzF,GAAA;AAAAyF,YAAA,CAAAvF,GAAA;AAAAuF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}